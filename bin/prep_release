#!/bin/bash

function echo_info() {
   echo -en "[\033[0;32mINFO\033[0m] "
   echo "$@"
}

function echo_error() {
   echo -en "[\033[0;31mERROR\033[0m] "
   echo "$@"
}

if [[ ! -z "$(git status --porcelain)" ]]; then
    echo_error "Repo not clean.

    Status:
$(git status --short)

    Diff:
$(git diff)"

    exit 1
fi

BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [[ "$BRANCH" != "master" ]]; then
    echo_error "On branch $BRANCH, release must be on master."
    exit 1;
fi

VERSION="0.0-$(git rev-list --count HEAD)"

echo_info "Bumping version to $VERSION"

echo "/<version>/
s/<version>.*<\/version>/<version>$VERSION<\/version>

/<scm>/
/<tag>/
s/<tag>.*<\/tag>/<tag>$(git rev-parse HEAD)<\/tag>

/<Git-Revision>/
s/<Git-Revision>.*<\/Git-Revision>/<Git-Revision>$(git rev-parse HEAD)<\/Git-Revision>
wq" | ed pom.xml

sed 's/lambdaisland\/kaocha {:mvn\/version "[^"]*"}/lambdaisland\/kaocha {:mvn\/version "'${VERSION}'"}/' -i README.md doc/*.md
sed 's/\[lambdaisland\/kaocha "[^"]*"\]/\[lambdaisland\/kaocha "'${VERSION}'"\]/' -i README.md doc/*.md

echo_info "Updating CHANGELOG"

{
    echo "1a

## Added

## Fixed

## Changed
"
    echo "# ${VERSION} ($(date --rfc-3339=date) / $(git rev-parse --short HEAD))"
    echo "."
    echo "wq"
} | ed CHANGELOG.md

git add -A
git commit -m "Release v$VERSION"
git tag v$VERSION

git show HEAD
